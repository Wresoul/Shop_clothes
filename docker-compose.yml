

volumes:
  postgres_data:
  static_data:
  media_data:
  certbot_conf:
  certbot_www:


networks:
  dev:
    driver: bridge


services:
  db:
    image: postgres:13.0-alpine
    container_name: shop.co-db
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - dev



  backend:
    build: ./backend
    container_name: shop.co-backend
    env_file: .env
    volumes:
      - static_data:/app/static
      - media_data:/app/media

    ports:
      - 8000:8000
    links:
      - db
    restart: always
    command: sh -c "python3 manage.py makemigrations &&
                    python3 manage.py migrate &&
                    python3 manage.py collectstatic --noinput &&
                    gunicorn DjangoProject2.wsgi:application --bind 0.0.0.0:8000"
    networks:
      - dev

  redis:
    image: redis:7.2.3-alpine
    container_name: shop.co-redis
    ports:
      - 6379:6379
    hostname: redis
    networks:
      - dev
    restart: unless-stopped

  #celery:
    #build: ./backend
    #container_name: bigcorp-celery
    #env_file: .env
    #depends_on:
      #- db
      #- redis
   # volumes:
      #- static_data:/app/static
    #restart: always
    #command: celery -A bigcorp worker --loglevel=info --beat

  nginx:
    image: nginx:latest
    container_name: shop.co-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_data:/app/static
      - media_data:/app/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - dev

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - dev

